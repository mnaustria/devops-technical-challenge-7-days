apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: config_cluster_name
  region: config_aws_region

iam:
  withOIDC: true # Enable EKS Cluster to communicate with AWS IAM
  serviceAccounts:
    - metadata:
        name: alb-ingress-controller
        namespace: kube-system
      attachPolicyARNs:
        - config_alb_policy_arn
    - metadata:
        name: s3-reader
        # if no namespace is set, "default" will be used;
        # the namespace will be created if it doesn't exist already
        namespace: backend-apps
        labels: { aws-usage: "application" }
      attachPolicyARNs:
        - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
      tags:
        Owner: config_tag_owner
        Team: config_tag_team
        Project: config_tag_project
        Environment: config_tag_environment
    - metadata:
        name: cache-access
        namespace: backend-apps
        labels: { aws-usage: "application" }
      attachPolicyARNs:
        - "arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess"
        - "arn:aws:iam::aws:policy/AmazonElastiCacheFullAccess"
    - metadata:
        name: cluster-autoscaler
        namespace: kube-system
        labels: { aws-usage: "cluster-ops" }
      attachPolicy: # inline policy can be defined along with `attachPolicyARNs`
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "autoscaling:DescribeAutoScalingGroups"
              - "autoscaling:DescribeAutoScalingInstances"
              - "autoscaling:DescribeLaunchConfigurations"
              - "autoscaling:DescribeTags"
              - "autoscaling:SetDesiredCapacity"
              - "autoscaling:TerminateInstanceInAutoScalingGroup"
            Resource: "*"

vpc:
  subnets:
    private:
      ap-southeast-1a: { id: "config-sub_priv_a" }
      ap-southeast-1b: { id: "config-sub_priv_b" }
    public:
      ap-southeast-1a: { id: "config-sub_pub_a" }
      ap-southeast-1b: { id: "config-sub_pub_b" }

managedNodeGroups:
  - name: manage-ng-1
    desiredCapacity: config_ng_cap
    privateNetworking: true
    iam:
      withAddonPolicies:
        imageBuilder: true
        autoScaler: true
        externalDNS: true
        certManager: true
        appMesh: true
        appMeshPreview: true
        ebs: true
        fsx: true
        efs: true
        albIngress: true
        xRay: true
        cloudWatch: true

secretsEncryption:
  keyARN: config_kms_arn
